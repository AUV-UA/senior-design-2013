// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AUVprotocol.proto

public final class AUVprotocol {
  private AUVprotocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface AUV_StateOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint64 timestamp = 1;
    /**
     * <code>required uint64 timestamp = 1;</code>
     *
     * <pre>
     * timestamp in ms
     * </pre>
     */
    boolean hasTimestamp();
    /**
     * <code>required uint64 timestamp = 1;</code>
     *
     * <pre>
     * timestamp in ms
     * </pre>
     */
    long getTimestamp();

    // required bool mission = 2;
    /**
     * <code>required bool mission = 2;</code>
     *
     * <pre>
     * boolean mission switch state
     * </pre>
     */
    boolean hasMission();
    /**
     * <code>required bool mission = 2;</code>
     *
     * <pre>
     * boolean mission switch state
     * </pre>
     */
    boolean getMission();

    // required float batt = 3;
    /**
     * <code>required float batt = 3;</code>
     *
     * <pre>
     * battery voltage
     * </pre>
     */
    boolean hasBatt();
    /**
     * <code>required float batt = 3;</code>
     *
     * <pre>
     * battery voltage
     * </pre>
     */
    float getBatt();

    // required bool aligning = 4;
    /**
     * <code>required bool aligning = 4;</code>
     *
     * <pre>
     * alignment status for heading/depth
     * </pre>
     */
    boolean hasAligning();
    /**
     * <code>required bool aligning = 4;</code>
     *
     * <pre>
     * alignment status for heading/depth
     * </pre>
     */
    boolean getAligning();

    // optional .AUV_State.Telemetry telemetry = 5;
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    boolean hasTelemetry();
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    AUVprotocol.AUV_State.Telemetry getTelemetry();
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    AUVprotocol.AUV_State.TelemetryOrBuilder getTelemetryOrBuilder();

    // optional string msg = 6;
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    boolean hasMsg();
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    java.lang.String getMsg();
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    com.google.protobuf.ByteString
        getMsgBytes();
  }
  /**
   * Protobuf type {@code AUV_State}
   */
  public static final class AUV_State extends
      com.google.protobuf.GeneratedMessage
      implements AUV_StateOrBuilder {
    // Use AUV_State.newBuilder() to construct.
    private AUV_State(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private AUV_State(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final AUV_State defaultInstance;
    public static AUV_State getDefaultInstance() {
      return defaultInstance;
    }

    public AUV_State getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private AUV_State(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              timestamp_ = input.readUInt64();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              mission_ = input.readBool();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              batt_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              aligning_ = input.readBool();
              break;
            }
            case 42: {
              AUVprotocol.AUV_State.Telemetry.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = telemetry_.toBuilder();
              }
              telemetry_ = input.readMessage(AUVprotocol.AUV_State.Telemetry.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(telemetry_);
                telemetry_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 50: {
              bitField0_ |= 0x00000020;
              msg_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AUVprotocol.internal_static_AUV_State_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AUVprotocol.internal_static_AUV_State_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AUVprotocol.AUV_State.class, AUVprotocol.AUV_State.Builder.class);
    }

    public static com.google.protobuf.Parser<AUV_State> PARSER =
        new com.google.protobuf.AbstractParser<AUV_State>() {
      public AUV_State parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new AUV_State(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<AUV_State> getParserForType() {
      return PARSER;
    }

    public interface TelemetryOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // optional float heading = 1;
      /**
       * <code>optional float heading = 1;</code>
       *
       * <pre>
       * float heading, degrees cw from north
       * </pre>
       */
      boolean hasHeading();
      /**
       * <code>optional float heading = 1;</code>
       *
       * <pre>
       * float heading, degrees cw from north
       * </pre>
       */
      float getHeading();

      // optional float depth = 2;
      /**
       * <code>optional float depth = 2;</code>
       *
       * <pre>
       * float depth, meters from surface
       * </pre>
       */
      boolean hasDepth();
      /**
       * <code>optional float depth = 2;</code>
       *
       * <pre>
       * float depth, meters from surface
       * </pre>
       */
      float getDepth();

      // optional float acc_x = 3;
      /**
       * <code>optional float acc_x = 3;</code>
       *
       * <pre>
       * float accelerations 
       * </pre>
       */
      boolean hasAccX();
      /**
       * <code>optional float acc_x = 3;</code>
       *
       * <pre>
       * float accelerations 
       * </pre>
       */
      float getAccX();

      // optional float acc_y = 4;
      /**
       * <code>optional float acc_y = 4;</code>
       */
      boolean hasAccY();
      /**
       * <code>optional float acc_y = 4;</code>
       */
      float getAccY();

      // optional float acc_z = 5;
      /**
       * <code>optional float acc_z = 5;</code>
       */
      boolean hasAccZ();
      /**
       * <code>optional float acc_z = 5;</code>
       */
      float getAccZ();

      // optional float yaw = 6;
      /**
       * <code>optional float yaw = 6;</code>
       *
       * <pre>
       * float principal angles
       * </pre>
       */
      boolean hasYaw();
      /**
       * <code>optional float yaw = 6;</code>
       *
       * <pre>
       * float principal angles
       * </pre>
       */
      float getYaw();

      // optional float pitch = 7;
      /**
       * <code>optional float pitch = 7;</code>
       */
      boolean hasPitch();
      /**
       * <code>optional float pitch = 7;</code>
       */
      float getPitch();

      // optional float roll = 8;
      /**
       * <code>optional float roll = 8;</code>
       */
      boolean hasRoll();
      /**
       * <code>optional float roll = 8;</code>
       */
      float getRoll();

      // repeated .AUV_State.Telemetry.Camera camera = 9;
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      java.util.List<AUVprotocol.AUV_State.Telemetry.Camera> 
          getCameraList();
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      AUVprotocol.AUV_State.Telemetry.Camera getCamera(int index);
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      int getCameraCount();
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      java.util.List<? extends AUVprotocol.AUV_State.Telemetry.CameraOrBuilder> 
          getCameraOrBuilderList();
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      AUVprotocol.AUV_State.Telemetry.CameraOrBuilder getCameraOrBuilder(
          int index);

      // optional .AUV_State.Telemetry.Pinger pinger_loc = 10;
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      boolean hasPingerLoc();
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      AUVprotocol.AUV_State.Telemetry.Pinger getPingerLoc();
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      AUVprotocol.AUV_State.Telemetry.PingerOrBuilder getPingerLocOrBuilder();
    }
    /**
     * Protobuf type {@code AUV_State.Telemetry}
     */
    public static final class Telemetry extends
        com.google.protobuf.GeneratedMessage
        implements TelemetryOrBuilder {
      // Use Telemetry.newBuilder() to construct.
      private Telemetry(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Telemetry(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Telemetry defaultInstance;
      public static Telemetry getDefaultInstance() {
        return defaultInstance;
      }

      public Telemetry getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Telemetry(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                heading_ = input.readFloat();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                depth_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                accX_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                accY_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                accZ_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                yaw_ = input.readFloat();
                break;
              }
              case 61: {
                bitField0_ |= 0x00000040;
                pitch_ = input.readFloat();
                break;
              }
              case 69: {
                bitField0_ |= 0x00000080;
                roll_ = input.readFloat();
                break;
              }
              case 74: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  camera_ = new java.util.ArrayList<AUVprotocol.AUV_State.Telemetry.Camera>();
                  mutable_bitField0_ |= 0x00000100;
                }
                camera_.add(input.readMessage(AUVprotocol.AUV_State.Telemetry.Camera.PARSER, extensionRegistry));
                break;
              }
              case 82: {
                AUVprotocol.AUV_State.Telemetry.Pinger.Builder subBuilder = null;
                if (((bitField0_ & 0x00000100) == 0x00000100)) {
                  subBuilder = pingerLoc_.toBuilder();
                }
                pingerLoc_ = input.readMessage(AUVprotocol.AUV_State.Telemetry.Pinger.PARSER, extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(pingerLoc_);
                  pingerLoc_ = subBuilder.buildPartial();
                }
                bitField0_ |= 0x00000100;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            camera_ = java.util.Collections.unmodifiableList(camera_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AUVprotocol.internal_static_AUV_State_Telemetry_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AUVprotocol.internal_static_AUV_State_Telemetry_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AUVprotocol.AUV_State.Telemetry.class, AUVprotocol.AUV_State.Telemetry.Builder.class);
      }

      public static com.google.protobuf.Parser<Telemetry> PARSER =
          new com.google.protobuf.AbstractParser<Telemetry>() {
        public Telemetry parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Telemetry(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Telemetry> getParserForType() {
        return PARSER;
      }

      /**
       * Protobuf enum {@code AUV_State.Telemetry.CameraLocation}
       */
      public enum CameraLocation
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>FORWARD = 0;</code>
         */
        FORWARD(0, 0),
        /**
         * <code>DOWN = 1;</code>
         */
        DOWN(1, 1),
        /**
         * <code>PORT = 2;</code>
         */
        PORT(2, 2),
        /**
         * <code>STARBOARD = 3;</code>
         */
        STARBOARD(3, 3),
        ;

        /**
         * <code>FORWARD = 0;</code>
         */
        public static final int FORWARD_VALUE = 0;
        /**
         * <code>DOWN = 1;</code>
         */
        public static final int DOWN_VALUE = 1;
        /**
         * <code>PORT = 2;</code>
         */
        public static final int PORT_VALUE = 2;
        /**
         * <code>STARBOARD = 3;</code>
         */
        public static final int STARBOARD_VALUE = 3;


        public final int getNumber() { return value; }

        public static CameraLocation valueOf(int value) {
          switch (value) {
            case 0: return FORWARD;
            case 1: return DOWN;
            case 2: return PORT;
            case 3: return STARBOARD;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<CameraLocation>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static com.google.protobuf.Internal.EnumLiteMap<CameraLocation>
            internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<CameraLocation>() {
                public CameraLocation findValueByNumber(int number) {
                  return CameraLocation.valueOf(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          return getDescriptor().getValues().get(index);
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return AUVprotocol.AUV_State.Telemetry.getDescriptor().getEnumTypes().get(0);
        }

        private static final CameraLocation[] VALUES = values();

        public static CameraLocation valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          return VALUES[desc.getIndex()];
        }

        private final int index;
        private final int value;

        private CameraLocation(int index, int value) {
          this.index = index;
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:AUV_State.Telemetry.CameraLocation)
      }

      public interface CameraOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // required .AUV_State.Telemetry.CameraLocation auv_loc = 1;
        /**
         * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
         *
         * <pre>
         * position on camera of AUV
         * </pre>
         */
        boolean hasAuvLoc();
        /**
         * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
         *
         * <pre>
         * position on camera of AUV
         * </pre>
         */
        AUVprotocol.AUV_State.Telemetry.CameraLocation getAuvLoc();

        // required string file_loc = 2;
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        boolean hasFileLoc();
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        java.lang.String getFileLoc();
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        com.google.protobuf.ByteString
            getFileLocBytes();
      }
      /**
       * Protobuf type {@code AUV_State.Telemetry.Camera}
       */
      public static final class Camera extends
          com.google.protobuf.GeneratedMessage
          implements CameraOrBuilder {
        // Use Camera.newBuilder() to construct.
        private Camera(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Camera(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Camera defaultInstance;
        public static Camera getDefaultInstance() {
          return defaultInstance;
        }

        public Camera getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Camera(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  int rawValue = input.readEnum();
                  AUVprotocol.AUV_State.Telemetry.CameraLocation value = AUVprotocol.AUV_State.Telemetry.CameraLocation.valueOf(rawValue);
                  if (value == null) {
                    unknownFields.mergeVarintField(1, rawValue);
                  } else {
                    bitField0_ |= 0x00000001;
                    auvLoc_ = value;
                  }
                  break;
                }
                case 18: {
                  bitField0_ |= 0x00000002;
                  fileLoc_ = input.readBytes();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_Camera_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_Camera_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AUVprotocol.AUV_State.Telemetry.Camera.class, AUVprotocol.AUV_State.Telemetry.Camera.Builder.class);
        }

        public static com.google.protobuf.Parser<Camera> PARSER =
            new com.google.protobuf.AbstractParser<Camera>() {
          public Camera parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Camera(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Camera> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // required .AUV_State.Telemetry.CameraLocation auv_loc = 1;
        public static final int AUV_LOC_FIELD_NUMBER = 1;
        private AUVprotocol.AUV_State.Telemetry.CameraLocation auvLoc_;
        /**
         * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
         *
         * <pre>
         * position on camera of AUV
         * </pre>
         */
        public boolean hasAuvLoc() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
         *
         * <pre>
         * position on camera of AUV
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.CameraLocation getAuvLoc() {
          return auvLoc_;
        }

        // required string file_loc = 2;
        public static final int FILE_LOC_FIELD_NUMBER = 2;
        private java.lang.Object fileLoc_;
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        public boolean hasFileLoc() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        public java.lang.String getFileLoc() {
          java.lang.Object ref = fileLoc_;
          if (ref instanceof java.lang.String) {
            return (java.lang.String) ref;
          } else {
            com.google.protobuf.ByteString bs = 
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              fileLoc_ = s;
            }
            return s;
          }
        }
        /**
         * <code>required string file_loc = 2;</code>
         *
         * <pre>
         * file location of camera output
         * </pre>
         */
        public com.google.protobuf.ByteString
            getFileLocBytes() {
          java.lang.Object ref = fileLoc_;
          if (ref instanceof java.lang.String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            fileLoc_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }

        private void initFields() {
          auvLoc_ = AUVprotocol.AUV_State.Telemetry.CameraLocation.FORWARD;
          fileLoc_ = "";
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasAuvLoc()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasFileLoc()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeEnum(1, auvLoc_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeBytes(2, getFileLocBytes());
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, auvLoc_.getNumber());
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, getFileLocBytes());
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Camera parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(AUVprotocol.AUV_State.Telemetry.Camera prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code AUV_State.Telemetry.Camera}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements AUVprotocol.AUV_State.Telemetry.CameraOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Camera_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Camera_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    AUVprotocol.AUV_State.Telemetry.Camera.class, AUVprotocol.AUV_State.Telemetry.Camera.Builder.class);
          }

          // Construct using AUVprotocol.AUV_State.Telemetry.Camera.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            auvLoc_ = AUVprotocol.AUV_State.Telemetry.CameraLocation.FORWARD;
            bitField0_ = (bitField0_ & ~0x00000001);
            fileLoc_ = "";
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Camera_descriptor;
          }

          public AUVprotocol.AUV_State.Telemetry.Camera getDefaultInstanceForType() {
            return AUVprotocol.AUV_State.Telemetry.Camera.getDefaultInstance();
          }

          public AUVprotocol.AUV_State.Telemetry.Camera build() {
            AUVprotocol.AUV_State.Telemetry.Camera result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public AUVprotocol.AUV_State.Telemetry.Camera buildPartial() {
            AUVprotocol.AUV_State.Telemetry.Camera result = new AUVprotocol.AUV_State.Telemetry.Camera(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.auvLoc_ = auvLoc_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.fileLoc_ = fileLoc_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof AUVprotocol.AUV_State.Telemetry.Camera) {
              return mergeFrom((AUVprotocol.AUV_State.Telemetry.Camera)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(AUVprotocol.AUV_State.Telemetry.Camera other) {
            if (other == AUVprotocol.AUV_State.Telemetry.Camera.getDefaultInstance()) return this;
            if (other.hasAuvLoc()) {
              setAuvLoc(other.getAuvLoc());
            }
            if (other.hasFileLoc()) {
              bitField0_ |= 0x00000002;
              fileLoc_ = other.fileLoc_;
              onChanged();
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasAuvLoc()) {
              
              return false;
            }
            if (!hasFileLoc()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            AUVprotocol.AUV_State.Telemetry.Camera parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (AUVprotocol.AUV_State.Telemetry.Camera) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // required .AUV_State.Telemetry.CameraLocation auv_loc = 1;
          private AUVprotocol.AUV_State.Telemetry.CameraLocation auvLoc_ = AUVprotocol.AUV_State.Telemetry.CameraLocation.FORWARD;
          /**
           * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
           *
           * <pre>
           * position on camera of AUV
           * </pre>
           */
          public boolean hasAuvLoc() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
           *
           * <pre>
           * position on camera of AUV
           * </pre>
           */
          public AUVprotocol.AUV_State.Telemetry.CameraLocation getAuvLoc() {
            return auvLoc_;
          }
          /**
           * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
           *
           * <pre>
           * position on camera of AUV
           * </pre>
           */
          public Builder setAuvLoc(AUVprotocol.AUV_State.Telemetry.CameraLocation value) {
            if (value == null) {
              throw new NullPointerException();
            }
            bitField0_ |= 0x00000001;
            auvLoc_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required .AUV_State.Telemetry.CameraLocation auv_loc = 1;</code>
           *
           * <pre>
           * position on camera of AUV
           * </pre>
           */
          public Builder clearAuvLoc() {
            bitField0_ = (bitField0_ & ~0x00000001);
            auvLoc_ = AUVprotocol.AUV_State.Telemetry.CameraLocation.FORWARD;
            onChanged();
            return this;
          }

          // required string file_loc = 2;
          private java.lang.Object fileLoc_ = "";
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public boolean hasFileLoc() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public java.lang.String getFileLoc() {
            java.lang.Object ref = fileLoc_;
            if (!(ref instanceof java.lang.String)) {
              java.lang.String s = ((com.google.protobuf.ByteString) ref)
                  .toStringUtf8();
              fileLoc_ = s;
              return s;
            } else {
              return (java.lang.String) ref;
            }
          }
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public com.google.protobuf.ByteString
              getFileLocBytes() {
            java.lang.Object ref = fileLoc_;
            if (ref instanceof String) {
              com.google.protobuf.ByteString b = 
                  com.google.protobuf.ByteString.copyFromUtf8(
                      (java.lang.String) ref);
              fileLoc_ = b;
              return b;
            } else {
              return (com.google.protobuf.ByteString) ref;
            }
          }
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public Builder setFileLoc(
              java.lang.String value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            fileLoc_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public Builder clearFileLoc() {
            bitField0_ = (bitField0_ & ~0x00000002);
            fileLoc_ = getDefaultInstance().getFileLoc();
            onChanged();
            return this;
          }
          /**
           * <code>required string file_loc = 2;</code>
           *
           * <pre>
           * file location of camera output
           * </pre>
           */
          public Builder setFileLocBytes(
              com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
            fileLoc_ = value;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:AUV_State.Telemetry.Camera)
        }

        static {
          defaultInstance = new Camera(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:AUV_State.Telemetry.Camera)
      }

      public interface PingerOrBuilder
          extends com.google.protobuf.MessageOrBuilder {

        // required float heading = 1;
        /**
         * <code>required float heading = 1;</code>
         *
         * <pre>
         * heading to pinger source relative to AUV
         * </pre>
         */
        boolean hasHeading();
        /**
         * <code>required float heading = 1;</code>
         *
         * <pre>
         * heading to pinger source relative to AUV
         * </pre>
         */
        float getHeading();

        // required float elevation = 2;
        /**
         * <code>required float elevation = 2;</code>
         *
         * <pre>
         * elevation angle to pinger source
         * </pre>
         */
        boolean hasElevation();
        /**
         * <code>required float elevation = 2;</code>
         *
         * <pre>
         * elevation angle to pinger source
         * </pre>
         */
        float getElevation();
      }
      /**
       * Protobuf type {@code AUV_State.Telemetry.Pinger}
       */
      public static final class Pinger extends
          com.google.protobuf.GeneratedMessage
          implements PingerOrBuilder {
        // Use Pinger.newBuilder() to construct.
        private Pinger(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
          super(builder);
          this.unknownFields = builder.getUnknownFields();
        }
        private Pinger(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

        private static final Pinger defaultInstance;
        public static Pinger getDefaultInstance() {
          return defaultInstance;
        }

        public Pinger getDefaultInstanceForType() {
          return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;
        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
            getUnknownFields() {
          return this.unknownFields;
        }
        private Pinger(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          initFields();
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(input, unknownFields,
                                         extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
                case 13: {
                  bitField0_ |= 0x00000001;
                  heading_ = input.readFloat();
                  break;
                }
                case 21: {
                  bitField0_ |= 0x00000002;
                  elevation_ = input.readFloat();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e.getMessage()).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_Pinger_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_Pinger_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AUVprotocol.AUV_State.Telemetry.Pinger.class, AUVprotocol.AUV_State.Telemetry.Pinger.Builder.class);
        }

        public static com.google.protobuf.Parser<Pinger> PARSER =
            new com.google.protobuf.AbstractParser<Pinger>() {
          public Pinger parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Pinger(input, extensionRegistry);
          }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Pinger> getParserForType() {
          return PARSER;
        }

        private int bitField0_;
        // required float heading = 1;
        public static final int HEADING_FIELD_NUMBER = 1;
        private float heading_;
        /**
         * <code>required float heading = 1;</code>
         *
         * <pre>
         * heading to pinger source relative to AUV
         * </pre>
         */
        public boolean hasHeading() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required float heading = 1;</code>
         *
         * <pre>
         * heading to pinger source relative to AUV
         * </pre>
         */
        public float getHeading() {
          return heading_;
        }

        // required float elevation = 2;
        public static final int ELEVATION_FIELD_NUMBER = 2;
        private float elevation_;
        /**
         * <code>required float elevation = 2;</code>
         *
         * <pre>
         * elevation angle to pinger source
         * </pre>
         */
        public boolean hasElevation() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required float elevation = 2;</code>
         *
         * <pre>
         * elevation angle to pinger source
         * </pre>
         */
        public float getElevation() {
          return elevation_;
        }

        private void initFields() {
          heading_ = 0F;
          elevation_ = 0F;
        }
        private byte memoizedIsInitialized = -1;
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized != -1) return isInitialized == 1;

          if (!hasHeading()) {
            memoizedIsInitialized = 0;
            return false;
          }
          if (!hasElevation()) {
            memoizedIsInitialized = 0;
            return false;
          }
          memoizedIsInitialized = 1;
          return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          getSerializedSize();
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            output.writeFloat(1, heading_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            output.writeFloat(2, elevation_);
          }
          getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;
        public int getSerializedSize() {
          int size = memoizedSerializedSize;
          if (size != -1) return size;

          size = 0;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(1, heading_);
          }
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            size += com.google.protobuf.CodedOutputStream
              .computeFloatSize(2, elevation_);
          }
          size += getUnknownFields().getSerializedSize();
          memoizedSerializedSize = size;
          return size;
        }

        private static final long serialVersionUID = 0L;
        @java.lang.Override
        protected java.lang.Object writeReplace()
            throws java.io.ObjectStreamException {
          return super.writeReplace();
        }

        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return PARSER.parseFrom(input);
        }
        public static AUVprotocol.AUV_State.Telemetry.Pinger parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() { return Builder.create(); }
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder(AUVprotocol.AUV_State.Telemetry.Pinger prototype) {
          return newBuilder().mergeFrom(prototype);
        }
        public Builder toBuilder() { return newBuilder(this); }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * Protobuf type {@code AUV_State.Telemetry.Pinger}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessage.Builder<Builder>
           implements AUVprotocol.AUV_State.Telemetry.PingerOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Pinger_descriptor;
          }

          protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Pinger_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    AUVprotocol.AUV_State.Telemetry.Pinger.class, AUVprotocol.AUV_State.Telemetry.Pinger.Builder.class);
          }

          // Construct using AUVprotocol.AUV_State.Telemetry.Pinger.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            }
          }
          private static Builder create() {
            return new Builder();
          }

          public Builder clear() {
            super.clear();
            heading_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000001);
            elevation_ = 0F;
            bitField0_ = (bitField0_ & ~0x00000002);
            return this;
          }

          public Builder clone() {
            return create().mergeFrom(buildPartial());
          }

          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return AUVprotocol.internal_static_AUV_State_Telemetry_Pinger_descriptor;
          }

          public AUVprotocol.AUV_State.Telemetry.Pinger getDefaultInstanceForType() {
            return AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance();
          }

          public AUVprotocol.AUV_State.Telemetry.Pinger build() {
            AUVprotocol.AUV_State.Telemetry.Pinger result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          public AUVprotocol.AUV_State.Telemetry.Pinger buildPartial() {
            AUVprotocol.AUV_State.Telemetry.Pinger result = new AUVprotocol.AUV_State.Telemetry.Pinger(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
              to_bitField0_ |= 0x00000001;
            }
            result.heading_ = heading_;
            if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
              to_bitField0_ |= 0x00000002;
            }
            result.elevation_ = elevation_;
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof AUVprotocol.AUV_State.Telemetry.Pinger) {
              return mergeFrom((AUVprotocol.AUV_State.Telemetry.Pinger)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(AUVprotocol.AUV_State.Telemetry.Pinger other) {
            if (other == AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance()) return this;
            if (other.hasHeading()) {
              setHeading(other.getHeading());
            }
            if (other.hasElevation()) {
              setElevation(other.getElevation());
            }
            this.mergeUnknownFields(other.getUnknownFields());
            return this;
          }

          public final boolean isInitialized() {
            if (!hasHeading()) {
              
              return false;
            }
            if (!hasElevation()) {
              
              return false;
            }
            return true;
          }

          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            AUVprotocol.AUV_State.Telemetry.Pinger parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (AUVprotocol.AUV_State.Telemetry.Pinger) e.getUnfinishedMessage();
              throw e;
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          // required float heading = 1;
          private float heading_ ;
          /**
           * <code>required float heading = 1;</code>
           *
           * <pre>
           * heading to pinger source relative to AUV
           * </pre>
           */
          public boolean hasHeading() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
          }
          /**
           * <code>required float heading = 1;</code>
           *
           * <pre>
           * heading to pinger source relative to AUV
           * </pre>
           */
          public float getHeading() {
            return heading_;
          }
          /**
           * <code>required float heading = 1;</code>
           *
           * <pre>
           * heading to pinger source relative to AUV
           * </pre>
           */
          public Builder setHeading(float value) {
            bitField0_ |= 0x00000001;
            heading_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required float heading = 1;</code>
           *
           * <pre>
           * heading to pinger source relative to AUV
           * </pre>
           */
          public Builder clearHeading() {
            bitField0_ = (bitField0_ & ~0x00000001);
            heading_ = 0F;
            onChanged();
            return this;
          }

          // required float elevation = 2;
          private float elevation_ ;
          /**
           * <code>required float elevation = 2;</code>
           *
           * <pre>
           * elevation angle to pinger source
           * </pre>
           */
          public boolean hasElevation() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
          }
          /**
           * <code>required float elevation = 2;</code>
           *
           * <pre>
           * elevation angle to pinger source
           * </pre>
           */
          public float getElevation() {
            return elevation_;
          }
          /**
           * <code>required float elevation = 2;</code>
           *
           * <pre>
           * elevation angle to pinger source
           * </pre>
           */
          public Builder setElevation(float value) {
            bitField0_ |= 0x00000002;
            elevation_ = value;
            onChanged();
            return this;
          }
          /**
           * <code>required float elevation = 2;</code>
           *
           * <pre>
           * elevation angle to pinger source
           * </pre>
           */
          public Builder clearElevation() {
            bitField0_ = (bitField0_ & ~0x00000002);
            elevation_ = 0F;
            onChanged();
            return this;
          }

          // @@protoc_insertion_point(builder_scope:AUV_State.Telemetry.Pinger)
        }

        static {
          defaultInstance = new Pinger(true);
          defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:AUV_State.Telemetry.Pinger)
      }

      private int bitField0_;
      // optional float heading = 1;
      public static final int HEADING_FIELD_NUMBER = 1;
      private float heading_;
      /**
       * <code>optional float heading = 1;</code>
       *
       * <pre>
       * float heading, degrees cw from north
       * </pre>
       */
      public boolean hasHeading() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional float heading = 1;</code>
       *
       * <pre>
       * float heading, degrees cw from north
       * </pre>
       */
      public float getHeading() {
        return heading_;
      }

      // optional float depth = 2;
      public static final int DEPTH_FIELD_NUMBER = 2;
      private float depth_;
      /**
       * <code>optional float depth = 2;</code>
       *
       * <pre>
       * float depth, meters from surface
       * </pre>
       */
      public boolean hasDepth() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float depth = 2;</code>
       *
       * <pre>
       * float depth, meters from surface
       * </pre>
       */
      public float getDepth() {
        return depth_;
      }

      // optional float acc_x = 3;
      public static final int ACC_X_FIELD_NUMBER = 3;
      private float accX_;
      /**
       * <code>optional float acc_x = 3;</code>
       *
       * <pre>
       * float accelerations 
       * </pre>
       */
      public boolean hasAccX() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float acc_x = 3;</code>
       *
       * <pre>
       * float accelerations 
       * </pre>
       */
      public float getAccX() {
        return accX_;
      }

      // optional float acc_y = 4;
      public static final int ACC_Y_FIELD_NUMBER = 4;
      private float accY_;
      /**
       * <code>optional float acc_y = 4;</code>
       */
      public boolean hasAccY() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float acc_y = 4;</code>
       */
      public float getAccY() {
        return accY_;
      }

      // optional float acc_z = 5;
      public static final int ACC_Z_FIELD_NUMBER = 5;
      private float accZ_;
      /**
       * <code>optional float acc_z = 5;</code>
       */
      public boolean hasAccZ() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float acc_z = 5;</code>
       */
      public float getAccZ() {
        return accZ_;
      }

      // optional float yaw = 6;
      public static final int YAW_FIELD_NUMBER = 6;
      private float yaw_;
      /**
       * <code>optional float yaw = 6;</code>
       *
       * <pre>
       * float principal angles
       * </pre>
       */
      public boolean hasYaw() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float yaw = 6;</code>
       *
       * <pre>
       * float principal angles
       * </pre>
       */
      public float getYaw() {
        return yaw_;
      }

      // optional float pitch = 7;
      public static final int PITCH_FIELD_NUMBER = 7;
      private float pitch_;
      /**
       * <code>optional float pitch = 7;</code>
       */
      public boolean hasPitch() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional float pitch = 7;</code>
       */
      public float getPitch() {
        return pitch_;
      }

      // optional float roll = 8;
      public static final int ROLL_FIELD_NUMBER = 8;
      private float roll_;
      /**
       * <code>optional float roll = 8;</code>
       */
      public boolean hasRoll() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional float roll = 8;</code>
       */
      public float getRoll() {
        return roll_;
      }

      // repeated .AUV_State.Telemetry.Camera camera = 9;
      public static final int CAMERA_FIELD_NUMBER = 9;
      private java.util.List<AUVprotocol.AUV_State.Telemetry.Camera> camera_;
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      public java.util.List<AUVprotocol.AUV_State.Telemetry.Camera> getCameraList() {
        return camera_;
      }
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      public java.util.List<? extends AUVprotocol.AUV_State.Telemetry.CameraOrBuilder> 
          getCameraOrBuilderList() {
        return camera_;
      }
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      public int getCameraCount() {
        return camera_.size();
      }
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      public AUVprotocol.AUV_State.Telemetry.Camera getCamera(int index) {
        return camera_.get(index);
      }
      /**
       * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
       *
       * <pre>
       * list of 1 or more cameras
       * </pre>
       */
      public AUVprotocol.AUV_State.Telemetry.CameraOrBuilder getCameraOrBuilder(
          int index) {
        return camera_.get(index);
      }

      // optional .AUV_State.Telemetry.Pinger pinger_loc = 10;
      public static final int PINGER_LOC_FIELD_NUMBER = 10;
      private AUVprotocol.AUV_State.Telemetry.Pinger pingerLoc_;
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      public boolean hasPingerLoc() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      public AUVprotocol.AUV_State.Telemetry.Pinger getPingerLoc() {
        return pingerLoc_;
      }
      /**
       * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
       *
       * <pre>
       * angles to pinger source
       * </pre>
       */
      public AUVprotocol.AUV_State.Telemetry.PingerOrBuilder getPingerLocOrBuilder() {
        return pingerLoc_;
      }

      private void initFields() {
        heading_ = 0F;
        depth_ = 0F;
        accX_ = 0F;
        accY_ = 0F;
        accZ_ = 0F;
        yaw_ = 0F;
        pitch_ = 0F;
        roll_ = 0F;
        camera_ = java.util.Collections.emptyList();
        pingerLoc_ = AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        for (int i = 0; i < getCameraCount(); i++) {
          if (!getCamera(i).isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        if (hasPingerLoc()) {
          if (!getPingerLoc().isInitialized()) {
            memoizedIsInitialized = 0;
            return false;
          }
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, heading_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, depth_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, accX_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, accY_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, accZ_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, yaw_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeFloat(7, pitch_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeFloat(8, roll_);
        }
        for (int i = 0; i < camera_.size(); i++) {
          output.writeMessage(9, camera_.get(i));
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeMessage(10, pingerLoc_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, heading_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, depth_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, accX_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, accY_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, accZ_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, yaw_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(7, pitch_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(8, roll_);
        }
        for (int i = 0; i < camera_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, camera_.get(i));
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, pingerLoc_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static AUVprotocol.AUV_State.Telemetry parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static AUVprotocol.AUV_State.Telemetry parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.AUV_State.Telemetry parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(AUVprotocol.AUV_State.Telemetry prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code AUV_State.Telemetry}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements AUVprotocol.AUV_State.TelemetryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AUVprotocol.AUV_State.Telemetry.class, AUVprotocol.AUV_State.Telemetry.Builder.class);
        }

        // Construct using AUVprotocol.AUV_State.Telemetry.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
            getCameraFieldBuilder();
            getPingerLocFieldBuilder();
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          heading_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          depth_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          accX_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          accY_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          accZ_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          yaw_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          pitch_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000040);
          roll_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000080);
          if (cameraBuilder_ == null) {
            camera_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            cameraBuilder_.clear();
          }
          if (pingerLocBuilder_ == null) {
            pingerLoc_ = AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance();
          } else {
            pingerLocBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return AUVprotocol.internal_static_AUV_State_Telemetry_descriptor;
        }

        public AUVprotocol.AUV_State.Telemetry getDefaultInstanceForType() {
          return AUVprotocol.AUV_State.Telemetry.getDefaultInstance();
        }

        public AUVprotocol.AUV_State.Telemetry build() {
          AUVprotocol.AUV_State.Telemetry result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public AUVprotocol.AUV_State.Telemetry buildPartial() {
          AUVprotocol.AUV_State.Telemetry result = new AUVprotocol.AUV_State.Telemetry(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.heading_ = heading_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.depth_ = depth_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.accX_ = accX_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.accY_ = accY_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.accZ_ = accZ_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.yaw_ = yaw_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.pitch_ = pitch_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.roll_ = roll_;
          if (cameraBuilder_ == null) {
            if (((bitField0_ & 0x00000100) == 0x00000100)) {
              camera_ = java.util.Collections.unmodifiableList(camera_);
              bitField0_ = (bitField0_ & ~0x00000100);
            }
            result.camera_ = camera_;
          } else {
            result.camera_ = cameraBuilder_.build();
          }
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000100;
          }
          if (pingerLocBuilder_ == null) {
            result.pingerLoc_ = pingerLoc_;
          } else {
            result.pingerLoc_ = pingerLocBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof AUVprotocol.AUV_State.Telemetry) {
            return mergeFrom((AUVprotocol.AUV_State.Telemetry)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(AUVprotocol.AUV_State.Telemetry other) {
          if (other == AUVprotocol.AUV_State.Telemetry.getDefaultInstance()) return this;
          if (other.hasHeading()) {
            setHeading(other.getHeading());
          }
          if (other.hasDepth()) {
            setDepth(other.getDepth());
          }
          if (other.hasAccX()) {
            setAccX(other.getAccX());
          }
          if (other.hasAccY()) {
            setAccY(other.getAccY());
          }
          if (other.hasAccZ()) {
            setAccZ(other.getAccZ());
          }
          if (other.hasYaw()) {
            setYaw(other.getYaw());
          }
          if (other.hasPitch()) {
            setPitch(other.getPitch());
          }
          if (other.hasRoll()) {
            setRoll(other.getRoll());
          }
          if (cameraBuilder_ == null) {
            if (!other.camera_.isEmpty()) {
              if (camera_.isEmpty()) {
                camera_ = other.camera_;
                bitField0_ = (bitField0_ & ~0x00000100);
              } else {
                ensureCameraIsMutable();
                camera_.addAll(other.camera_);
              }
              onChanged();
            }
          } else {
            if (!other.camera_.isEmpty()) {
              if (cameraBuilder_.isEmpty()) {
                cameraBuilder_.dispose();
                cameraBuilder_ = null;
                camera_ = other.camera_;
                bitField0_ = (bitField0_ & ~0x00000100);
                cameraBuilder_ = 
                  com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                     getCameraFieldBuilder() : null;
              } else {
                cameraBuilder_.addAllMessages(other.camera_);
              }
            }
          }
          if (other.hasPingerLoc()) {
            mergePingerLoc(other.getPingerLoc());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          for (int i = 0; i < getCameraCount(); i++) {
            if (!getCamera(i).isInitialized()) {
              
              return false;
            }
          }
          if (hasPingerLoc()) {
            if (!getPingerLoc().isInitialized()) {
              
              return false;
            }
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          AUVprotocol.AUV_State.Telemetry parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (AUVprotocol.AUV_State.Telemetry) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // optional float heading = 1;
        private float heading_ ;
        /**
         * <code>optional float heading = 1;</code>
         *
         * <pre>
         * float heading, degrees cw from north
         * </pre>
         */
        public boolean hasHeading() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional float heading = 1;</code>
         *
         * <pre>
         * float heading, degrees cw from north
         * </pre>
         */
        public float getHeading() {
          return heading_;
        }
        /**
         * <code>optional float heading = 1;</code>
         *
         * <pre>
         * float heading, degrees cw from north
         * </pre>
         */
        public Builder setHeading(float value) {
          bitField0_ |= 0x00000001;
          heading_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float heading = 1;</code>
         *
         * <pre>
         * float heading, degrees cw from north
         * </pre>
         */
        public Builder clearHeading() {
          bitField0_ = (bitField0_ & ~0x00000001);
          heading_ = 0F;
          onChanged();
          return this;
        }

        // optional float depth = 2;
        private float depth_ ;
        /**
         * <code>optional float depth = 2;</code>
         *
         * <pre>
         * float depth, meters from surface
         * </pre>
         */
        public boolean hasDepth() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional float depth = 2;</code>
         *
         * <pre>
         * float depth, meters from surface
         * </pre>
         */
        public float getDepth() {
          return depth_;
        }
        /**
         * <code>optional float depth = 2;</code>
         *
         * <pre>
         * float depth, meters from surface
         * </pre>
         */
        public Builder setDepth(float value) {
          bitField0_ |= 0x00000002;
          depth_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float depth = 2;</code>
         *
         * <pre>
         * float depth, meters from surface
         * </pre>
         */
        public Builder clearDepth() {
          bitField0_ = (bitField0_ & ~0x00000002);
          depth_ = 0F;
          onChanged();
          return this;
        }

        // optional float acc_x = 3;
        private float accX_ ;
        /**
         * <code>optional float acc_x = 3;</code>
         *
         * <pre>
         * float accelerations 
         * </pre>
         */
        public boolean hasAccX() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional float acc_x = 3;</code>
         *
         * <pre>
         * float accelerations 
         * </pre>
         */
        public float getAccX() {
          return accX_;
        }
        /**
         * <code>optional float acc_x = 3;</code>
         *
         * <pre>
         * float accelerations 
         * </pre>
         */
        public Builder setAccX(float value) {
          bitField0_ |= 0x00000004;
          accX_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float acc_x = 3;</code>
         *
         * <pre>
         * float accelerations 
         * </pre>
         */
        public Builder clearAccX() {
          bitField0_ = (bitField0_ & ~0x00000004);
          accX_ = 0F;
          onChanged();
          return this;
        }

        // optional float acc_y = 4;
        private float accY_ ;
        /**
         * <code>optional float acc_y = 4;</code>
         */
        public boolean hasAccY() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float acc_y = 4;</code>
         */
        public float getAccY() {
          return accY_;
        }
        /**
         * <code>optional float acc_y = 4;</code>
         */
        public Builder setAccY(float value) {
          bitField0_ |= 0x00000008;
          accY_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float acc_y = 4;</code>
         */
        public Builder clearAccY() {
          bitField0_ = (bitField0_ & ~0x00000008);
          accY_ = 0F;
          onChanged();
          return this;
        }

        // optional float acc_z = 5;
        private float accZ_ ;
        /**
         * <code>optional float acc_z = 5;</code>
         */
        public boolean hasAccZ() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float acc_z = 5;</code>
         */
        public float getAccZ() {
          return accZ_;
        }
        /**
         * <code>optional float acc_z = 5;</code>
         */
        public Builder setAccZ(float value) {
          bitField0_ |= 0x00000010;
          accZ_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float acc_z = 5;</code>
         */
        public Builder clearAccZ() {
          bitField0_ = (bitField0_ & ~0x00000010);
          accZ_ = 0F;
          onChanged();
          return this;
        }

        // optional float yaw = 6;
        private float yaw_ ;
        /**
         * <code>optional float yaw = 6;</code>
         *
         * <pre>
         * float principal angles
         * </pre>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional float yaw = 6;</code>
         *
         * <pre>
         * float principal angles
         * </pre>
         */
        public float getYaw() {
          return yaw_;
        }
        /**
         * <code>optional float yaw = 6;</code>
         *
         * <pre>
         * float principal angles
         * </pre>
         */
        public Builder setYaw(float value) {
          bitField0_ |= 0x00000020;
          yaw_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float yaw = 6;</code>
         *
         * <pre>
         * float principal angles
         * </pre>
         */
        public Builder clearYaw() {
          bitField0_ = (bitField0_ & ~0x00000020);
          yaw_ = 0F;
          onChanged();
          return this;
        }

        // optional float pitch = 7;
        private float pitch_ ;
        /**
         * <code>optional float pitch = 7;</code>
         */
        public boolean hasPitch() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional float pitch = 7;</code>
         */
        public float getPitch() {
          return pitch_;
        }
        /**
         * <code>optional float pitch = 7;</code>
         */
        public Builder setPitch(float value) {
          bitField0_ |= 0x00000040;
          pitch_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float pitch = 7;</code>
         */
        public Builder clearPitch() {
          bitField0_ = (bitField0_ & ~0x00000040);
          pitch_ = 0F;
          onChanged();
          return this;
        }

        // optional float roll = 8;
        private float roll_ ;
        /**
         * <code>optional float roll = 8;</code>
         */
        public boolean hasRoll() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional float roll = 8;</code>
         */
        public float getRoll() {
          return roll_;
        }
        /**
         * <code>optional float roll = 8;</code>
         */
        public Builder setRoll(float value) {
          bitField0_ |= 0x00000080;
          roll_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float roll = 8;</code>
         */
        public Builder clearRoll() {
          bitField0_ = (bitField0_ & ~0x00000080);
          roll_ = 0F;
          onChanged();
          return this;
        }

        // repeated .AUV_State.Telemetry.Camera camera = 9;
        private java.util.List<AUVprotocol.AUV_State.Telemetry.Camera> camera_ =
          java.util.Collections.emptyList();
        private void ensureCameraIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            camera_ = new java.util.ArrayList<AUVprotocol.AUV_State.Telemetry.Camera>(camera_);
            bitField0_ |= 0x00000100;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
            AUVprotocol.AUV_State.Telemetry.Camera, AUVprotocol.AUV_State.Telemetry.Camera.Builder, AUVprotocol.AUV_State.Telemetry.CameraOrBuilder> cameraBuilder_;

        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public java.util.List<AUVprotocol.AUV_State.Telemetry.Camera> getCameraList() {
          if (cameraBuilder_ == null) {
            return java.util.Collections.unmodifiableList(camera_);
          } else {
            return cameraBuilder_.getMessageList();
          }
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public int getCameraCount() {
          if (cameraBuilder_ == null) {
            return camera_.size();
          } else {
            return cameraBuilder_.getCount();
          }
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Camera getCamera(int index) {
          if (cameraBuilder_ == null) {
            return camera_.get(index);
          } else {
            return cameraBuilder_.getMessage(index);
          }
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder setCamera(
            int index, AUVprotocol.AUV_State.Telemetry.Camera value) {
          if (cameraBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCameraIsMutable();
            camera_.set(index, value);
            onChanged();
          } else {
            cameraBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder setCamera(
            int index, AUVprotocol.AUV_State.Telemetry.Camera.Builder builderForValue) {
          if (cameraBuilder_ == null) {
            ensureCameraIsMutable();
            camera_.set(index, builderForValue.build());
            onChanged();
          } else {
            cameraBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder addCamera(AUVprotocol.AUV_State.Telemetry.Camera value) {
          if (cameraBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCameraIsMutable();
            camera_.add(value);
            onChanged();
          } else {
            cameraBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder addCamera(
            int index, AUVprotocol.AUV_State.Telemetry.Camera value) {
          if (cameraBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureCameraIsMutable();
            camera_.add(index, value);
            onChanged();
          } else {
            cameraBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder addCamera(
            AUVprotocol.AUV_State.Telemetry.Camera.Builder builderForValue) {
          if (cameraBuilder_ == null) {
            ensureCameraIsMutable();
            camera_.add(builderForValue.build());
            onChanged();
          } else {
            cameraBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder addCamera(
            int index, AUVprotocol.AUV_State.Telemetry.Camera.Builder builderForValue) {
          if (cameraBuilder_ == null) {
            ensureCameraIsMutable();
            camera_.add(index, builderForValue.build());
            onChanged();
          } else {
            cameraBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder addAllCamera(
            java.lang.Iterable<? extends AUVprotocol.AUV_State.Telemetry.Camera> values) {
          if (cameraBuilder_ == null) {
            ensureCameraIsMutable();
            super.addAll(values, camera_);
            onChanged();
          } else {
            cameraBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder clearCamera() {
          if (cameraBuilder_ == null) {
            camera_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000100);
            onChanged();
          } else {
            cameraBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public Builder removeCamera(int index) {
          if (cameraBuilder_ == null) {
            ensureCameraIsMutable();
            camera_.remove(index);
            onChanged();
          } else {
            cameraBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Camera.Builder getCameraBuilder(
            int index) {
          return getCameraFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.CameraOrBuilder getCameraOrBuilder(
            int index) {
          if (cameraBuilder_ == null) {
            return camera_.get(index);  } else {
            return cameraBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public java.util.List<? extends AUVprotocol.AUV_State.Telemetry.CameraOrBuilder> 
             getCameraOrBuilderList() {
          if (cameraBuilder_ != null) {
            return cameraBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(camera_);
          }
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Camera.Builder addCameraBuilder() {
          return getCameraFieldBuilder().addBuilder(
              AUVprotocol.AUV_State.Telemetry.Camera.getDefaultInstance());
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Camera.Builder addCameraBuilder(
            int index) {
          return getCameraFieldBuilder().addBuilder(
              index, AUVprotocol.AUV_State.Telemetry.Camera.getDefaultInstance());
        }
        /**
         * <code>repeated .AUV_State.Telemetry.Camera camera = 9;</code>
         *
         * <pre>
         * list of 1 or more cameras
         * </pre>
         */
        public java.util.List<AUVprotocol.AUV_State.Telemetry.Camera.Builder> 
             getCameraBuilderList() {
          return getCameraFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilder<
            AUVprotocol.AUV_State.Telemetry.Camera, AUVprotocol.AUV_State.Telemetry.Camera.Builder, AUVprotocol.AUV_State.Telemetry.CameraOrBuilder> 
            getCameraFieldBuilder() {
          if (cameraBuilder_ == null) {
            cameraBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                AUVprotocol.AUV_State.Telemetry.Camera, AUVprotocol.AUV_State.Telemetry.Camera.Builder, AUVprotocol.AUV_State.Telemetry.CameraOrBuilder>(
                    camera_,
                    ((bitField0_ & 0x00000100) == 0x00000100),
                    getParentForChildren(),
                    isClean());
            camera_ = null;
          }
          return cameraBuilder_;
        }

        // optional .AUV_State.Telemetry.Pinger pinger_loc = 10;
        private AUVprotocol.AUV_State.Telemetry.Pinger pingerLoc_ = AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance();
        private com.google.protobuf.SingleFieldBuilder<
            AUVprotocol.AUV_State.Telemetry.Pinger, AUVprotocol.AUV_State.Telemetry.Pinger.Builder, AUVprotocol.AUV_State.Telemetry.PingerOrBuilder> pingerLocBuilder_;
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public boolean hasPingerLoc() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Pinger getPingerLoc() {
          if (pingerLocBuilder_ == null) {
            return pingerLoc_;
          } else {
            return pingerLocBuilder_.getMessage();
          }
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public Builder setPingerLoc(AUVprotocol.AUV_State.Telemetry.Pinger value) {
          if (pingerLocBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            pingerLoc_ = value;
            onChanged();
          } else {
            pingerLocBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public Builder setPingerLoc(
            AUVprotocol.AUV_State.Telemetry.Pinger.Builder builderForValue) {
          if (pingerLocBuilder_ == null) {
            pingerLoc_ = builderForValue.build();
            onChanged();
          } else {
            pingerLocBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public Builder mergePingerLoc(AUVprotocol.AUV_State.Telemetry.Pinger value) {
          if (pingerLocBuilder_ == null) {
            if (((bitField0_ & 0x00000200) == 0x00000200) &&
                pingerLoc_ != AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance()) {
              pingerLoc_ =
                AUVprotocol.AUV_State.Telemetry.Pinger.newBuilder(pingerLoc_).mergeFrom(value).buildPartial();
            } else {
              pingerLoc_ = value;
            }
            onChanged();
          } else {
            pingerLocBuilder_.mergeFrom(value);
          }
          bitField0_ |= 0x00000200;
          return this;
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public Builder clearPingerLoc() {
          if (pingerLocBuilder_ == null) {
            pingerLoc_ = AUVprotocol.AUV_State.Telemetry.Pinger.getDefaultInstance();
            onChanged();
          } else {
            pingerLocBuilder_.clear();
          }
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.Pinger.Builder getPingerLocBuilder() {
          bitField0_ |= 0x00000200;
          onChanged();
          return getPingerLocFieldBuilder().getBuilder();
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        public AUVprotocol.AUV_State.Telemetry.PingerOrBuilder getPingerLocOrBuilder() {
          if (pingerLocBuilder_ != null) {
            return pingerLocBuilder_.getMessageOrBuilder();
          } else {
            return pingerLoc_;
          }
        }
        /**
         * <code>optional .AUV_State.Telemetry.Pinger pinger_loc = 10;</code>
         *
         * <pre>
         * angles to pinger source
         * </pre>
         */
        private com.google.protobuf.SingleFieldBuilder<
            AUVprotocol.AUV_State.Telemetry.Pinger, AUVprotocol.AUV_State.Telemetry.Pinger.Builder, AUVprotocol.AUV_State.Telemetry.PingerOrBuilder> 
            getPingerLocFieldBuilder() {
          if (pingerLocBuilder_ == null) {
            pingerLocBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                AUVprotocol.AUV_State.Telemetry.Pinger, AUVprotocol.AUV_State.Telemetry.Pinger.Builder, AUVprotocol.AUV_State.Telemetry.PingerOrBuilder>(
                    pingerLoc_,
                    getParentForChildren(),
                    isClean());
            pingerLoc_ = null;
          }
          return pingerLocBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:AUV_State.Telemetry)
      }

      static {
        defaultInstance = new Telemetry(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:AUV_State.Telemetry)
    }

    private int bitField0_;
    // required uint64 timestamp = 1;
    public static final int TIMESTAMP_FIELD_NUMBER = 1;
    private long timestamp_;
    /**
     * <code>required uint64 timestamp = 1;</code>
     *
     * <pre>
     * timestamp in ms
     * </pre>
     */
    public boolean hasTimestamp() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint64 timestamp = 1;</code>
     *
     * <pre>
     * timestamp in ms
     * </pre>
     */
    public long getTimestamp() {
      return timestamp_;
    }

    // required bool mission = 2;
    public static final int MISSION_FIELD_NUMBER = 2;
    private boolean mission_;
    /**
     * <code>required bool mission = 2;</code>
     *
     * <pre>
     * boolean mission switch state
     * </pre>
     */
    public boolean hasMission() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required bool mission = 2;</code>
     *
     * <pre>
     * boolean mission switch state
     * </pre>
     */
    public boolean getMission() {
      return mission_;
    }

    // required float batt = 3;
    public static final int BATT_FIELD_NUMBER = 3;
    private float batt_;
    /**
     * <code>required float batt = 3;</code>
     *
     * <pre>
     * battery voltage
     * </pre>
     */
    public boolean hasBatt() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required float batt = 3;</code>
     *
     * <pre>
     * battery voltage
     * </pre>
     */
    public float getBatt() {
      return batt_;
    }

    // required bool aligning = 4;
    public static final int ALIGNING_FIELD_NUMBER = 4;
    private boolean aligning_;
    /**
     * <code>required bool aligning = 4;</code>
     *
     * <pre>
     * alignment status for heading/depth
     * </pre>
     */
    public boolean hasAligning() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required bool aligning = 4;</code>
     *
     * <pre>
     * alignment status for heading/depth
     * </pre>
     */
    public boolean getAligning() {
      return aligning_;
    }

    // optional .AUV_State.Telemetry telemetry = 5;
    public static final int TELEMETRY_FIELD_NUMBER = 5;
    private AUVprotocol.AUV_State.Telemetry telemetry_;
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    public boolean hasTelemetry() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    public AUVprotocol.AUV_State.Telemetry getTelemetry() {
      return telemetry_;
    }
    /**
     * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
     */
    public AUVprotocol.AUV_State.TelemetryOrBuilder getTelemetryOrBuilder() {
      return telemetry_;
    }

    // optional string msg = 6;
    public static final int MSG_FIELD_NUMBER = 6;
    private java.lang.Object msg_;
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    public boolean hasMsg() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    public java.lang.String getMsg() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          msg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string msg = 6;</code>
     *
     * <pre>
     * arbitrary message from AUV to mission (logging?)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMsgBytes() {
      java.lang.Object ref = msg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        msg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      timestamp_ = 0L;
      mission_ = false;
      batt_ = 0F;
      aligning_ = false;
      telemetry_ = AUVprotocol.AUV_State.Telemetry.getDefaultInstance();
      msg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTimestamp()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMission()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBatt()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAligning()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTelemetry()) {
        if (!getTelemetry().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt64(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(2, mission_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, batt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, aligning_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(5, telemetry_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(1, timestamp_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, mission_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, batt_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, aligning_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, telemetry_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static AUVprotocol.AUV_State parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AUVprotocol.AUV_State parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AUVprotocol.AUV_State parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AUVprotocol.AUV_State parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AUVprotocol.AUV_State parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AUVprotocol.AUV_State parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static AUVprotocol.AUV_State parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static AUVprotocol.AUV_State parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static AUVprotocol.AUV_State parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AUVprotocol.AUV_State parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AUVprotocol.AUV_State prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code AUV_State}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AUVprotocol.AUV_StateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AUVprotocol.internal_static_AUV_State_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AUVprotocol.internal_static_AUV_State_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AUVprotocol.AUV_State.class, AUVprotocol.AUV_State.Builder.class);
      }

      // Construct using AUVprotocol.AUV_State.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTelemetryFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        timestamp_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        mission_ = false;
        bitField0_ = (bitField0_ & ~0x00000002);
        batt_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        aligning_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (telemetryBuilder_ == null) {
          telemetry_ = AUVprotocol.AUV_State.Telemetry.getDefaultInstance();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        msg_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AUVprotocol.internal_static_AUV_State_descriptor;
      }

      public AUVprotocol.AUV_State getDefaultInstanceForType() {
        return AUVprotocol.AUV_State.getDefaultInstance();
      }

      public AUVprotocol.AUV_State build() {
        AUVprotocol.AUV_State result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AUVprotocol.AUV_State buildPartial() {
        AUVprotocol.AUV_State result = new AUVprotocol.AUV_State(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.timestamp_ = timestamp_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mission_ = mission_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.batt_ = batt_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.aligning_ = aligning_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        if (telemetryBuilder_ == null) {
          result.telemetry_ = telemetry_;
        } else {
          result.telemetry_ = telemetryBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.msg_ = msg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AUVprotocol.AUV_State) {
          return mergeFrom((AUVprotocol.AUV_State)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AUVprotocol.AUV_State other) {
        if (other == AUVprotocol.AUV_State.getDefaultInstance()) return this;
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMission()) {
          setMission(other.getMission());
        }
        if (other.hasBatt()) {
          setBatt(other.getBatt());
        }
        if (other.hasAligning()) {
          setAligning(other.getAligning());
        }
        if (other.hasTelemetry()) {
          mergeTelemetry(other.getTelemetry());
        }
        if (other.hasMsg()) {
          bitField0_ |= 0x00000020;
          msg_ = other.msg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTimestamp()) {
          
          return false;
        }
        if (!hasMission()) {
          
          return false;
        }
        if (!hasBatt()) {
          
          return false;
        }
        if (!hasAligning()) {
          
          return false;
        }
        if (hasTelemetry()) {
          if (!getTelemetry().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AUVprotocol.AUV_State parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AUVprotocol.AUV_State) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint64 timestamp = 1;
      private long timestamp_ ;
      /**
       * <code>required uint64 timestamp = 1;</code>
       *
       * <pre>
       * timestamp in ms
       * </pre>
       */
      public boolean hasTimestamp() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint64 timestamp = 1;</code>
       *
       * <pre>
       * timestamp in ms
       * </pre>
       */
      public long getTimestamp() {
        return timestamp_;
      }
      /**
       * <code>required uint64 timestamp = 1;</code>
       *
       * <pre>
       * timestamp in ms
       * </pre>
       */
      public Builder setTimestamp(long value) {
        bitField0_ |= 0x00000001;
        timestamp_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 timestamp = 1;</code>
       *
       * <pre>
       * timestamp in ms
       * </pre>
       */
      public Builder clearTimestamp() {
        bitField0_ = (bitField0_ & ~0x00000001);
        timestamp_ = 0L;
        onChanged();
        return this;
      }

      // required bool mission = 2;
      private boolean mission_ ;
      /**
       * <code>required bool mission = 2;</code>
       *
       * <pre>
       * boolean mission switch state
       * </pre>
       */
      public boolean hasMission() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool mission = 2;</code>
       *
       * <pre>
       * boolean mission switch state
       * </pre>
       */
      public boolean getMission() {
        return mission_;
      }
      /**
       * <code>required bool mission = 2;</code>
       *
       * <pre>
       * boolean mission switch state
       * </pre>
       */
      public Builder setMission(boolean value) {
        bitField0_ |= 0x00000002;
        mission_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool mission = 2;</code>
       *
       * <pre>
       * boolean mission switch state
       * </pre>
       */
      public Builder clearMission() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mission_ = false;
        onChanged();
        return this;
      }

      // required float batt = 3;
      private float batt_ ;
      /**
       * <code>required float batt = 3;</code>
       *
       * <pre>
       * battery voltage
       * </pre>
       */
      public boolean hasBatt() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float batt = 3;</code>
       *
       * <pre>
       * battery voltage
       * </pre>
       */
      public float getBatt() {
        return batt_;
      }
      /**
       * <code>required float batt = 3;</code>
       *
       * <pre>
       * battery voltage
       * </pre>
       */
      public Builder setBatt(float value) {
        bitField0_ |= 0x00000004;
        batt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required float batt = 3;</code>
       *
       * <pre>
       * battery voltage
       * </pre>
       */
      public Builder clearBatt() {
        bitField0_ = (bitField0_ & ~0x00000004);
        batt_ = 0F;
        onChanged();
        return this;
      }

      // required bool aligning = 4;
      private boolean aligning_ ;
      /**
       * <code>required bool aligning = 4;</code>
       *
       * <pre>
       * alignment status for heading/depth
       * </pre>
       */
      public boolean hasAligning() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool aligning = 4;</code>
       *
       * <pre>
       * alignment status for heading/depth
       * </pre>
       */
      public boolean getAligning() {
        return aligning_;
      }
      /**
       * <code>required bool aligning = 4;</code>
       *
       * <pre>
       * alignment status for heading/depth
       * </pre>
       */
      public Builder setAligning(boolean value) {
        bitField0_ |= 0x00000008;
        aligning_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool aligning = 4;</code>
       *
       * <pre>
       * alignment status for heading/depth
       * </pre>
       */
      public Builder clearAligning() {
        bitField0_ = (bitField0_ & ~0x00000008);
        aligning_ = false;
        onChanged();
        return this;
      }

      // optional .AUV_State.Telemetry telemetry = 5;
      private AUVprotocol.AUV_State.Telemetry telemetry_ = AUVprotocol.AUV_State.Telemetry.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AUVprotocol.AUV_State.Telemetry, AUVprotocol.AUV_State.Telemetry.Builder, AUVprotocol.AUV_State.TelemetryOrBuilder> telemetryBuilder_;
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public boolean hasTelemetry() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public AUVprotocol.AUV_State.Telemetry getTelemetry() {
        if (telemetryBuilder_ == null) {
          return telemetry_;
        } else {
          return telemetryBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public Builder setTelemetry(AUVprotocol.AUV_State.Telemetry value) {
        if (telemetryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          telemetry_ = value;
          onChanged();
        } else {
          telemetryBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public Builder setTelemetry(
          AUVprotocol.AUV_State.Telemetry.Builder builderForValue) {
        if (telemetryBuilder_ == null) {
          telemetry_ = builderForValue.build();
          onChanged();
        } else {
          telemetryBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public Builder mergeTelemetry(AUVprotocol.AUV_State.Telemetry value) {
        if (telemetryBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010) &&
              telemetry_ != AUVprotocol.AUV_State.Telemetry.getDefaultInstance()) {
            telemetry_ =
              AUVprotocol.AUV_State.Telemetry.newBuilder(telemetry_).mergeFrom(value).buildPartial();
          } else {
            telemetry_ = value;
          }
          onChanged();
        } else {
          telemetryBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000010;
        return this;
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public Builder clearTelemetry() {
        if (telemetryBuilder_ == null) {
          telemetry_ = AUVprotocol.AUV_State.Telemetry.getDefaultInstance();
          onChanged();
        } else {
          telemetryBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public AUVprotocol.AUV_State.Telemetry.Builder getTelemetryBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getTelemetryFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      public AUVprotocol.AUV_State.TelemetryOrBuilder getTelemetryOrBuilder() {
        if (telemetryBuilder_ != null) {
          return telemetryBuilder_.getMessageOrBuilder();
        } else {
          return telemetry_;
        }
      }
      /**
       * <code>optional .AUV_State.Telemetry telemetry = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AUVprotocol.AUV_State.Telemetry, AUVprotocol.AUV_State.Telemetry.Builder, AUVprotocol.AUV_State.TelemetryOrBuilder> 
          getTelemetryFieldBuilder() {
        if (telemetryBuilder_ == null) {
          telemetryBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AUVprotocol.AUV_State.Telemetry, AUVprotocol.AUV_State.Telemetry.Builder, AUVprotocol.AUV_State.TelemetryOrBuilder>(
                  telemetry_,
                  getParentForChildren(),
                  isClean());
          telemetry_ = null;
        }
        return telemetryBuilder_;
      }

      // optional string msg = 6;
      private java.lang.Object msg_ = "";
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public boolean hasMsg() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public java.lang.String getMsg() {
        java.lang.Object ref = msg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          msg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMsgBytes() {
        java.lang.Object ref = msg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          msg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public Builder setMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        msg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public Builder clearMsg() {
        bitField0_ = (bitField0_ & ~0x00000020);
        msg_ = getDefaultInstance().getMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string msg = 6;</code>
       *
       * <pre>
       * arbitrary message from AUV to mission (logging?)
       * </pre>
       */
      public Builder setMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        msg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:AUV_State)
    }

    static {
      defaultInstance = new AUV_State(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:AUV_State)
  }

  public interface CommandOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional .Command.Movement speed = 1;
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    boolean hasSpeed();
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    AUVprotocol.Command.Movement getSpeed();
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    AUVprotocol.Command.MovementOrBuilder getSpeedOrBuilder();

    // optional float heading = 2;
    /**
     * <code>optional float heading = 2;</code>
     *
     * <pre>
     * requested heading, degrees cw from north
     * </pre>
     */
    boolean hasHeading();
    /**
     * <code>optional float heading = 2;</code>
     *
     * <pre>
     * requested heading, degrees cw from north
     * </pre>
     */
    float getHeading();

    // optional float depth = 3;
    /**
     * <code>optional float depth = 3;</code>
     *
     * <pre>
     * requested depth, meters from surface
     * </pre>
     */
    boolean hasDepth();
    /**
     * <code>optional float depth = 3;</code>
     *
     * <pre>
     * requested depth, meters from surface
     * </pre>
     */
    float getDepth();

    // optional uint32 freq = 4;
    /**
     * <code>optional uint32 freq = 4;</code>
     *
     * <pre>
     * requested tracking frequency
     * </pre>
     */
    boolean hasFreq();
    /**
     * <code>optional uint32 freq = 4;</code>
     *
     * <pre>
     * requested tracking frequency
     * </pre>
     */
    int getFreq();

    // repeated .Command.Output outputs = 5;
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    java.util.List<AUVprotocol.Command.Output> 
        getOutputsList();
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    AUVprotocol.Command.Output getOutputs(int index);
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    int getOutputsCount();
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    java.util.List<? extends AUVprotocol.Command.OutputOrBuilder> 
        getOutputsOrBuilderList();
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    AUVprotocol.Command.OutputOrBuilder getOutputsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Command}
   *
   * <pre>
   *  agent --&gt; AUV model
   * </pre>
   */
  public static final class Command extends
      com.google.protobuf.GeneratedMessage
      implements CommandOrBuilder {
    // Use Command.newBuilder() to construct.
    private Command(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Command(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Command defaultInstance;
    public static Command getDefaultInstance() {
      return defaultInstance;
    }

    public Command getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Command(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              AUVprotocol.Command.Movement.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = speed_.toBuilder();
              }
              speed_ = input.readMessage(AUVprotocol.Command.Movement.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speed_);
                speed_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              heading_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              depth_ = input.readFloat();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              freq_ = input.readUInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                outputs_ = new java.util.ArrayList<AUVprotocol.Command.Output>();
                mutable_bitField0_ |= 0x00000010;
              }
              outputs_.add(input.readMessage(AUVprotocol.Command.Output.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          outputs_ = java.util.Collections.unmodifiableList(outputs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return AUVprotocol.internal_static_Command_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return AUVprotocol.internal_static_Command_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              AUVprotocol.Command.class, AUVprotocol.Command.Builder.class);
    }

    public static com.google.protobuf.Parser<Command> PARSER =
        new com.google.protobuf.AbstractParser<Command>() {
      public Command parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Command(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Command> getParserForType() {
      return PARSER;
    }

    public interface MovementOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required float x = 1;
      /**
       * <code>required float x = 1;</code>
       */
      boolean hasX();
      /**
       * <code>required float x = 1;</code>
       */
      float getX();

      // required float y = 2;
      /**
       * <code>required float y = 2;</code>
       */
      boolean hasY();
      /**
       * <code>required float y = 2;</code>
       */
      float getY();

      // required float z = 3;
      /**
       * <code>required float z = 3;</code>
       */
      boolean hasZ();
      /**
       * <code>required float z = 3;</code>
       */
      float getZ();

      // optional float yaw = 4;
      /**
       * <code>optional float yaw = 4;</code>
       */
      boolean hasYaw();
      /**
       * <code>optional float yaw = 4;</code>
       */
      float getYaw();

      // optional float pitch = 5;
      /**
       * <code>optional float pitch = 5;</code>
       */
      boolean hasPitch();
      /**
       * <code>optional float pitch = 5;</code>
       */
      float getPitch();

      // optional float roll = 6;
      /**
       * <code>optional float roll = 6;</code>
       */
      boolean hasRoll();
      /**
       * <code>optional float roll = 6;</code>
       */
      float getRoll();
    }
    /**
     * Protobuf type {@code Command.Movement}
     */
    public static final class Movement extends
        com.google.protobuf.GeneratedMessage
        implements MovementOrBuilder {
      // Use Movement.newBuilder() to construct.
      private Movement(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Movement(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Movement defaultInstance;
      public static Movement getDefaultInstance() {
        return defaultInstance;
      }

      public Movement getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Movement(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 13: {
                bitField0_ |= 0x00000001;
                x_ = input.readFloat();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                y_ = input.readFloat();
                break;
              }
              case 29: {
                bitField0_ |= 0x00000004;
                z_ = input.readFloat();
                break;
              }
              case 37: {
                bitField0_ |= 0x00000008;
                yaw_ = input.readFloat();
                break;
              }
              case 45: {
                bitField0_ |= 0x00000010;
                pitch_ = input.readFloat();
                break;
              }
              case 53: {
                bitField0_ |= 0x00000020;
                roll_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AUVprotocol.internal_static_Command_Movement_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AUVprotocol.internal_static_Command_Movement_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AUVprotocol.Command.Movement.class, AUVprotocol.Command.Movement.Builder.class);
      }

      public static com.google.protobuf.Parser<Movement> PARSER =
          new com.google.protobuf.AbstractParser<Movement>() {
        public Movement parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Movement(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Movement> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required float x = 1;
      public static final int X_FIELD_NUMBER = 1;
      private float x_;
      /**
       * <code>required float x = 1;</code>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required float x = 1;</code>
       */
      public float getX() {
        return x_;
      }

      // required float y = 2;
      public static final int Y_FIELD_NUMBER = 2;
      private float y_;
      /**
       * <code>required float y = 2;</code>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float y = 2;</code>
       */
      public float getY() {
        return y_;
      }

      // required float z = 3;
      public static final int Z_FIELD_NUMBER = 3;
      private float z_;
      /**
       * <code>required float z = 3;</code>
       */
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required float z = 3;</code>
       */
      public float getZ() {
        return z_;
      }

      // optional float yaw = 4;
      public static final int YAW_FIELD_NUMBER = 4;
      private float yaw_;
      /**
       * <code>optional float yaw = 4;</code>
       */
      public boolean hasYaw() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional float yaw = 4;</code>
       */
      public float getYaw() {
        return yaw_;
      }

      // optional float pitch = 5;
      public static final int PITCH_FIELD_NUMBER = 5;
      private float pitch_;
      /**
       * <code>optional float pitch = 5;</code>
       */
      public boolean hasPitch() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional float pitch = 5;</code>
       */
      public float getPitch() {
        return pitch_;
      }

      // optional float roll = 6;
      public static final int ROLL_FIELD_NUMBER = 6;
      private float roll_;
      /**
       * <code>optional float roll = 6;</code>
       */
      public boolean hasRoll() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional float roll = 6;</code>
       */
      public float getRoll() {
        return roll_;
      }

      private void initFields() {
        x_ = 0F;
        y_ = 0F;
        z_ = 0F;
        yaw_ = 0F;
        pitch_ = 0F;
        roll_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasX()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasY()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasZ()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeFloat(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeFloat(3, z_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeFloat(4, yaw_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeFloat(5, pitch_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeFloat(6, roll_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, x_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, y_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(3, z_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(4, yaw_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(5, pitch_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(6, roll_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static AUVprotocol.Command.Movement parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.Command.Movement parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.Command.Movement parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.Command.Movement parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.Command.Movement parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.Command.Movement parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static AUVprotocol.Command.Movement parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static AUVprotocol.Command.Movement parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static AUVprotocol.Command.Movement parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.Command.Movement parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(AUVprotocol.Command.Movement prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Command.Movement}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements AUVprotocol.Command.MovementOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AUVprotocol.internal_static_Command_Movement_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AUVprotocol.internal_static_Command_Movement_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AUVprotocol.Command.Movement.class, AUVprotocol.Command.Movement.Builder.class);
        }

        // Construct using AUVprotocol.Command.Movement.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          x_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000001);
          y_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          z_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000004);
          yaw_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000008);
          pitch_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000010);
          roll_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000020);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return AUVprotocol.internal_static_Command_Movement_descriptor;
        }

        public AUVprotocol.Command.Movement getDefaultInstanceForType() {
          return AUVprotocol.Command.Movement.getDefaultInstance();
        }

        public AUVprotocol.Command.Movement build() {
          AUVprotocol.Command.Movement result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public AUVprotocol.Command.Movement buildPartial() {
          AUVprotocol.Command.Movement result = new AUVprotocol.Command.Movement(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.x_ = x_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.y_ = y_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.z_ = z_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.yaw_ = yaw_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.pitch_ = pitch_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.roll_ = roll_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof AUVprotocol.Command.Movement) {
            return mergeFrom((AUVprotocol.Command.Movement)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(AUVprotocol.Command.Movement other) {
          if (other == AUVprotocol.Command.Movement.getDefaultInstance()) return this;
          if (other.hasX()) {
            setX(other.getX());
          }
          if (other.hasY()) {
            setY(other.getY());
          }
          if (other.hasZ()) {
            setZ(other.getZ());
          }
          if (other.hasYaw()) {
            setYaw(other.getYaw());
          }
          if (other.hasPitch()) {
            setPitch(other.getPitch());
          }
          if (other.hasRoll()) {
            setRoll(other.getRoll());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasX()) {
            
            return false;
          }
          if (!hasY()) {
            
            return false;
          }
          if (!hasZ()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          AUVprotocol.Command.Movement parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (AUVprotocol.Command.Movement) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required float x = 1;
        private float x_ ;
        /**
         * <code>required float x = 1;</code>
         */
        public boolean hasX() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required float x = 1;</code>
         */
        public float getX() {
          return x_;
        }
        /**
         * <code>required float x = 1;</code>
         */
        public Builder setX(float value) {
          bitField0_ |= 0x00000001;
          x_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float x = 1;</code>
         */
        public Builder clearX() {
          bitField0_ = (bitField0_ & ~0x00000001);
          x_ = 0F;
          onChanged();
          return this;
        }

        // required float y = 2;
        private float y_ ;
        /**
         * <code>required float y = 2;</code>
         */
        public boolean hasY() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required float y = 2;</code>
         */
        public float getY() {
          return y_;
        }
        /**
         * <code>required float y = 2;</code>
         */
        public Builder setY(float value) {
          bitField0_ |= 0x00000002;
          y_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float y = 2;</code>
         */
        public Builder clearY() {
          bitField0_ = (bitField0_ & ~0x00000002);
          y_ = 0F;
          onChanged();
          return this;
        }

        // required float z = 3;
        private float z_ ;
        /**
         * <code>required float z = 3;</code>
         */
        public boolean hasZ() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>required float z = 3;</code>
         */
        public float getZ() {
          return z_;
        }
        /**
         * <code>required float z = 3;</code>
         */
        public Builder setZ(float value) {
          bitField0_ |= 0x00000004;
          z_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float z = 3;</code>
         */
        public Builder clearZ() {
          bitField0_ = (bitField0_ & ~0x00000004);
          z_ = 0F;
          onChanged();
          return this;
        }

        // optional float yaw = 4;
        private float yaw_ ;
        /**
         * <code>optional float yaw = 4;</code>
         */
        public boolean hasYaw() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional float yaw = 4;</code>
         */
        public float getYaw() {
          return yaw_;
        }
        /**
         * <code>optional float yaw = 4;</code>
         */
        public Builder setYaw(float value) {
          bitField0_ |= 0x00000008;
          yaw_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float yaw = 4;</code>
         */
        public Builder clearYaw() {
          bitField0_ = (bitField0_ & ~0x00000008);
          yaw_ = 0F;
          onChanged();
          return this;
        }

        // optional float pitch = 5;
        private float pitch_ ;
        /**
         * <code>optional float pitch = 5;</code>
         */
        public boolean hasPitch() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional float pitch = 5;</code>
         */
        public float getPitch() {
          return pitch_;
        }
        /**
         * <code>optional float pitch = 5;</code>
         */
        public Builder setPitch(float value) {
          bitField0_ |= 0x00000010;
          pitch_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float pitch = 5;</code>
         */
        public Builder clearPitch() {
          bitField0_ = (bitField0_ & ~0x00000010);
          pitch_ = 0F;
          onChanged();
          return this;
        }

        // optional float roll = 6;
        private float roll_ ;
        /**
         * <code>optional float roll = 6;</code>
         */
        public boolean hasRoll() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional float roll = 6;</code>
         */
        public float getRoll() {
          return roll_;
        }
        /**
         * <code>optional float roll = 6;</code>
         */
        public Builder setRoll(float value) {
          bitField0_ |= 0x00000020;
          roll_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional float roll = 6;</code>
         */
        public Builder clearRoll() {
          bitField0_ = (bitField0_ & ~0x00000020);
          roll_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:Command.Movement)
      }

      static {
        defaultInstance = new Movement(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Command.Movement)
    }

    public interface OutputOrBuilder
        extends com.google.protobuf.MessageOrBuilder {

      // required string id = 1;
      /**
       * <code>required string id = 1;</code>
       */
      boolean hasId();
      /**
       * <code>required string id = 1;</code>
       */
      java.lang.String getId();
      /**
       * <code>required string id = 1;</code>
       */
      com.google.protobuf.ByteString
          getIdBytes();

      // required float value = 2;
      /**
       * <code>required float value = 2;</code>
       */
      boolean hasValue();
      /**
       * <code>required float value = 2;</code>
       */
      float getValue();
    }
    /**
     * Protobuf type {@code Command.Output}
     */
    public static final class Output extends
        com.google.protobuf.GeneratedMessage
        implements OutputOrBuilder {
      // Use Output.newBuilder() to construct.
      private Output(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Output(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Output defaultInstance;
      public static Output getDefaultInstance() {
        return defaultInstance;
      }

      public Output getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Output(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                bitField0_ |= 0x00000001;
                id_ = input.readBytes();
                break;
              }
              case 21: {
                bitField0_ |= 0x00000002;
                value_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AUVprotocol.internal_static_Command_Output_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AUVprotocol.internal_static_Command_Output_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AUVprotocol.Command.Output.class, AUVprotocol.Command.Output.Builder.class);
      }

      public static com.google.protobuf.Parser<Output> PARSER =
          new com.google.protobuf.AbstractParser<Output>() {
        public Output parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Output(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Output> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      // required string id = 1;
      public static final int ID_FIELD_NUMBER = 1;
      private java.lang.Object id_;
      /**
       * <code>required string id = 1;</code>
       */
      public boolean hasId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string id = 1;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            id_ = s;
          }
          return s;
        }
      }
      /**
       * <code>required string id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      // required float value = 2;
      public static final int VALUE_FIELD_NUMBER = 2;
      private float value_;
      /**
       * <code>required float value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required float value = 2;</code>
       */
      public float getValue() {
        return value_;
      }

      private void initFields() {
        id_ = "";
        value_ = 0F;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized != -1) return isInitialized == 1;

        if (!hasId()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasValue()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBytes(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeFloat(2, value_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, getIdBytes());
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, value_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static AUVprotocol.Command.Output parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.Command.Output parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.Command.Output parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static AUVprotocol.Command.Output parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static AUVprotocol.Command.Output parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.Command.Output parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static AUVprotocol.Command.Output parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static AUVprotocol.Command.Output parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static AUVprotocol.Command.Output parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static AUVprotocol.Command.Output parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(AUVprotocol.Command.Output prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Command.Output}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder>
         implements AUVprotocol.Command.OutputOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return AUVprotocol.internal_static_Command_Output_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return AUVprotocol.internal_static_Command_Output_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  AUVprotocol.Command.Output.class, AUVprotocol.Command.Output.Builder.class);
        }

        // Construct using AUVprotocol.Command.Output.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          id_ = "";
          bitField0_ = (bitField0_ & ~0x00000001);
          value_ = 0F;
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return AUVprotocol.internal_static_Command_Output_descriptor;
        }

        public AUVprotocol.Command.Output getDefaultInstanceForType() {
          return AUVprotocol.Command.Output.getDefaultInstance();
        }

        public AUVprotocol.Command.Output build() {
          AUVprotocol.Command.Output result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public AUVprotocol.Command.Output buildPartial() {
          AUVprotocol.Command.Output result = new AUVprotocol.Command.Output(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.id_ = id_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.value_ = value_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof AUVprotocol.Command.Output) {
            return mergeFrom((AUVprotocol.Command.Output)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(AUVprotocol.Command.Output other) {
          if (other == AUVprotocol.Command.Output.getDefaultInstance()) return this;
          if (other.hasId()) {
            bitField0_ |= 0x00000001;
            id_ = other.id_;
            onChanged();
          }
          if (other.hasValue()) {
            setValue(other.getValue());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasId()) {
            
            return false;
          }
          if (!hasValue()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          AUVprotocol.Command.Output parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (AUVprotocol.Command.Output) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        // required string id = 1;
        private java.lang.Object id_ = "";
        /**
         * <code>required string id = 1;</code>
         */
        public boolean hasId() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required string id = 1;</code>
         */
        public java.lang.String getId() {
          java.lang.Object ref = id_;
          if (!(ref instanceof java.lang.String)) {
            java.lang.String s = ((com.google.protobuf.ByteString) ref)
                .toStringUtf8();
            id_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>required string id = 1;</code>
         */
        public com.google.protobuf.ByteString
            getIdBytes() {
          java.lang.Object ref = id_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            id_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>required string id = 1;</code>
         */
        public Builder setId(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required string id = 1;</code>
         */
        public Builder clearId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }
        /**
         * <code>required string id = 1;</code>
         */
        public Builder setIdBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
          id_ = value;
          onChanged();
          return this;
        }

        // required float value = 2;
        private float value_ ;
        /**
         * <code>required float value = 2;</code>
         */
        public boolean hasValue() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required float value = 2;</code>
         */
        public float getValue() {
          return value_;
        }
        /**
         * <code>required float value = 2;</code>
         */
        public Builder setValue(float value) {
          bitField0_ |= 0x00000002;
          value_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required float value = 2;</code>
         */
        public Builder clearValue() {
          bitField0_ = (bitField0_ & ~0x00000002);
          value_ = 0F;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:Command.Output)
      }

      static {
        defaultInstance = new Output(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:Command.Output)
    }

    private int bitField0_;
    // optional .Command.Movement speed = 1;
    public static final int SPEED_FIELD_NUMBER = 1;
    private AUVprotocol.Command.Movement speed_;
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    public boolean hasSpeed() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    public AUVprotocol.Command.Movement getSpeed() {
      return speed_;
    }
    /**
     * <code>optional .Command.Movement speed = 1;</code>
     *
     * <pre>
     * 6-degree movement vector
     * </pre>
     */
    public AUVprotocol.Command.MovementOrBuilder getSpeedOrBuilder() {
      return speed_;
    }

    // optional float heading = 2;
    public static final int HEADING_FIELD_NUMBER = 2;
    private float heading_;
    /**
     * <code>optional float heading = 2;</code>
     *
     * <pre>
     * requested heading, degrees cw from north
     * </pre>
     */
    public boolean hasHeading() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional float heading = 2;</code>
     *
     * <pre>
     * requested heading, degrees cw from north
     * </pre>
     */
    public float getHeading() {
      return heading_;
    }

    // optional float depth = 3;
    public static final int DEPTH_FIELD_NUMBER = 3;
    private float depth_;
    /**
     * <code>optional float depth = 3;</code>
     *
     * <pre>
     * requested depth, meters from surface
     * </pre>
     */
    public boolean hasDepth() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional float depth = 3;</code>
     *
     * <pre>
     * requested depth, meters from surface
     * </pre>
     */
    public float getDepth() {
      return depth_;
    }

    // optional uint32 freq = 4;
    public static final int FREQ_FIELD_NUMBER = 4;
    private int freq_;
    /**
     * <code>optional uint32 freq = 4;</code>
     *
     * <pre>
     * requested tracking frequency
     * </pre>
     */
    public boolean hasFreq() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 freq = 4;</code>
     *
     * <pre>
     * requested tracking frequency
     * </pre>
     */
    public int getFreq() {
      return freq_;
    }

    // repeated .Command.Output outputs = 5;
    public static final int OUTPUTS_FIELD_NUMBER = 5;
    private java.util.List<AUVprotocol.Command.Output> outputs_;
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    public java.util.List<AUVprotocol.Command.Output> getOutputsList() {
      return outputs_;
    }
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    public java.util.List<? extends AUVprotocol.Command.OutputOrBuilder> 
        getOutputsOrBuilderList() {
      return outputs_;
    }
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    public int getOutputsCount() {
      return outputs_.size();
    }
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    public AUVprotocol.Command.Output getOutputs(int index) {
      return outputs_.get(index);
    }
    /**
     * <code>repeated .Command.Output outputs = 5;</code>
     */
    public AUVprotocol.Command.OutputOrBuilder getOutputsOrBuilder(
        int index) {
      return outputs_.get(index);
    }

    private void initFields() {
      speed_ = AUVprotocol.Command.Movement.getDefaultInstance();
      heading_ = 0F;
      depth_ = 0F;
      freq_ = 0;
      outputs_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (hasSpeed()) {
        if (!getSpeed().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOutputsCount(); i++) {
        if (!getOutputs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, heading_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, depth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, freq_);
      }
      for (int i = 0; i < outputs_.size(); i++) {
        output.writeMessage(5, outputs_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, speed_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, heading_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, depth_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, freq_);
      }
      for (int i = 0; i < outputs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, outputs_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static AUVprotocol.Command parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AUVprotocol.Command parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AUVprotocol.Command parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static AUVprotocol.Command parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static AUVprotocol.Command parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AUVprotocol.Command parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static AUVprotocol.Command parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static AUVprotocol.Command parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static AUVprotocol.Command parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static AUVprotocol.Command parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(AUVprotocol.Command prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Command}
     *
     * <pre>
     *  agent --&gt; AUV model
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements AUVprotocol.CommandOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return AUVprotocol.internal_static_Command_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return AUVprotocol.internal_static_Command_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                AUVprotocol.Command.class, AUVprotocol.Command.Builder.class);
      }

      // Construct using AUVprotocol.Command.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSpeedFieldBuilder();
          getOutputsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (speedBuilder_ == null) {
          speed_ = AUVprotocol.Command.Movement.getDefaultInstance();
        } else {
          speedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        heading_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        depth_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        freq_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return AUVprotocol.internal_static_Command_descriptor;
      }

      public AUVprotocol.Command getDefaultInstanceForType() {
        return AUVprotocol.Command.getDefaultInstance();
      }

      public AUVprotocol.Command build() {
        AUVprotocol.Command result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public AUVprotocol.Command buildPartial() {
        AUVprotocol.Command result = new AUVprotocol.Command(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (speedBuilder_ == null) {
          result.speed_ = speed_;
        } else {
          result.speed_ = speedBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.heading_ = heading_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.depth_ = depth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.freq_ = freq_;
        if (outputsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            outputs_ = java.util.Collections.unmodifiableList(outputs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.outputs_ = outputs_;
        } else {
          result.outputs_ = outputsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof AUVprotocol.Command) {
          return mergeFrom((AUVprotocol.Command)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(AUVprotocol.Command other) {
        if (other == AUVprotocol.Command.getDefaultInstance()) return this;
        if (other.hasSpeed()) {
          mergeSpeed(other.getSpeed());
        }
        if (other.hasHeading()) {
          setHeading(other.getHeading());
        }
        if (other.hasDepth()) {
          setDepth(other.getDepth());
        }
        if (other.hasFreq()) {
          setFreq(other.getFreq());
        }
        if (outputsBuilder_ == null) {
          if (!other.outputs_.isEmpty()) {
            if (outputs_.isEmpty()) {
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureOutputsIsMutable();
              outputs_.addAll(other.outputs_);
            }
            onChanged();
          }
        } else {
          if (!other.outputs_.isEmpty()) {
            if (outputsBuilder_.isEmpty()) {
              outputsBuilder_.dispose();
              outputsBuilder_ = null;
              outputs_ = other.outputs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              outputsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOutputsFieldBuilder() : null;
            } else {
              outputsBuilder_.addAllMessages(other.outputs_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasSpeed()) {
          if (!getSpeed().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOutputsCount(); i++) {
          if (!getOutputs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        AUVprotocol.Command parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (AUVprotocol.Command) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional .Command.Movement speed = 1;
      private AUVprotocol.Command.Movement speed_ = AUVprotocol.Command.Movement.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          AUVprotocol.Command.Movement, AUVprotocol.Command.Movement.Builder, AUVprotocol.Command.MovementOrBuilder> speedBuilder_;
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public boolean hasSpeed() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public AUVprotocol.Command.Movement getSpeed() {
        if (speedBuilder_ == null) {
          return speed_;
        } else {
          return speedBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public Builder setSpeed(AUVprotocol.Command.Movement value) {
        if (speedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speed_ = value;
          onChanged();
        } else {
          speedBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public Builder setSpeed(
          AUVprotocol.Command.Movement.Builder builderForValue) {
        if (speedBuilder_ == null) {
          speed_ = builderForValue.build();
          onChanged();
        } else {
          speedBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public Builder mergeSpeed(AUVprotocol.Command.Movement value) {
        if (speedBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              speed_ != AUVprotocol.Command.Movement.getDefaultInstance()) {
            speed_ =
              AUVprotocol.Command.Movement.newBuilder(speed_).mergeFrom(value).buildPartial();
          } else {
            speed_ = value;
          }
          onChanged();
        } else {
          speedBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public Builder clearSpeed() {
        if (speedBuilder_ == null) {
          speed_ = AUVprotocol.Command.Movement.getDefaultInstance();
          onChanged();
        } else {
          speedBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public AUVprotocol.Command.Movement.Builder getSpeedBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getSpeedFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      public AUVprotocol.Command.MovementOrBuilder getSpeedOrBuilder() {
        if (speedBuilder_ != null) {
          return speedBuilder_.getMessageOrBuilder();
        } else {
          return speed_;
        }
      }
      /**
       * <code>optional .Command.Movement speed = 1;</code>
       *
       * <pre>
       * 6-degree movement vector
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          AUVprotocol.Command.Movement, AUVprotocol.Command.Movement.Builder, AUVprotocol.Command.MovementOrBuilder> 
          getSpeedFieldBuilder() {
        if (speedBuilder_ == null) {
          speedBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              AUVprotocol.Command.Movement, AUVprotocol.Command.Movement.Builder, AUVprotocol.Command.MovementOrBuilder>(
                  speed_,
                  getParentForChildren(),
                  isClean());
          speed_ = null;
        }
        return speedBuilder_;
      }

      // optional float heading = 2;
      private float heading_ ;
      /**
       * <code>optional float heading = 2;</code>
       *
       * <pre>
       * requested heading, degrees cw from north
       * </pre>
       */
      public boolean hasHeading() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional float heading = 2;</code>
       *
       * <pre>
       * requested heading, degrees cw from north
       * </pre>
       */
      public float getHeading() {
        return heading_;
      }
      /**
       * <code>optional float heading = 2;</code>
       *
       * <pre>
       * requested heading, degrees cw from north
       * </pre>
       */
      public Builder setHeading(float value) {
        bitField0_ |= 0x00000002;
        heading_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float heading = 2;</code>
       *
       * <pre>
       * requested heading, degrees cw from north
       * </pre>
       */
      public Builder clearHeading() {
        bitField0_ = (bitField0_ & ~0x00000002);
        heading_ = 0F;
        onChanged();
        return this;
      }

      // optional float depth = 3;
      private float depth_ ;
      /**
       * <code>optional float depth = 3;</code>
       *
       * <pre>
       * requested depth, meters from surface
       * </pre>
       */
      public boolean hasDepth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional float depth = 3;</code>
       *
       * <pre>
       * requested depth, meters from surface
       * </pre>
       */
      public float getDepth() {
        return depth_;
      }
      /**
       * <code>optional float depth = 3;</code>
       *
       * <pre>
       * requested depth, meters from surface
       * </pre>
       */
      public Builder setDepth(float value) {
        bitField0_ |= 0x00000004;
        depth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float depth = 3;</code>
       *
       * <pre>
       * requested depth, meters from surface
       * </pre>
       */
      public Builder clearDepth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        depth_ = 0F;
        onChanged();
        return this;
      }

      // optional uint32 freq = 4;
      private int freq_ ;
      /**
       * <code>optional uint32 freq = 4;</code>
       *
       * <pre>
       * requested tracking frequency
       * </pre>
       */
      public boolean hasFreq() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 freq = 4;</code>
       *
       * <pre>
       * requested tracking frequency
       * </pre>
       */
      public int getFreq() {
        return freq_;
      }
      /**
       * <code>optional uint32 freq = 4;</code>
       *
       * <pre>
       * requested tracking frequency
       * </pre>
       */
      public Builder setFreq(int value) {
        bitField0_ |= 0x00000008;
        freq_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 freq = 4;</code>
       *
       * <pre>
       * requested tracking frequency
       * </pre>
       */
      public Builder clearFreq() {
        bitField0_ = (bitField0_ & ~0x00000008);
        freq_ = 0;
        onChanged();
        return this;
      }

      // repeated .Command.Output outputs = 5;
      private java.util.List<AUVprotocol.Command.Output> outputs_ =
        java.util.Collections.emptyList();
      private void ensureOutputsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          outputs_ = new java.util.ArrayList<AUVprotocol.Command.Output>(outputs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          AUVprotocol.Command.Output, AUVprotocol.Command.Output.Builder, AUVprotocol.Command.OutputOrBuilder> outputsBuilder_;

      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public java.util.List<AUVprotocol.Command.Output> getOutputsList() {
        if (outputsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(outputs_);
        } else {
          return outputsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public int getOutputsCount() {
        if (outputsBuilder_ == null) {
          return outputs_.size();
        } else {
          return outputsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public AUVprotocol.Command.Output getOutputs(int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);
        } else {
          return outputsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, AUVprotocol.Command.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.set(index, value);
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder setOutputs(
          int index, AUVprotocol.Command.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.set(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder addOutputs(AUVprotocol.Command.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, AUVprotocol.Command.Output value) {
        if (outputsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOutputsIsMutable();
          outputs_.add(index, value);
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder addOutputs(
          AUVprotocol.Command.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder addOutputs(
          int index, AUVprotocol.Command.Output.Builder builderForValue) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.add(index, builderForValue.build());
          onChanged();
        } else {
          outputsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder addAllOutputs(
          java.lang.Iterable<? extends AUVprotocol.Command.Output> values) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          super.addAll(values, outputs_);
          onChanged();
        } else {
          outputsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder clearOutputs() {
        if (outputsBuilder_ == null) {
          outputs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          outputsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public Builder removeOutputs(int index) {
        if (outputsBuilder_ == null) {
          ensureOutputsIsMutable();
          outputs_.remove(index);
          onChanged();
        } else {
          outputsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public AUVprotocol.Command.Output.Builder getOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public AUVprotocol.Command.OutputOrBuilder getOutputsOrBuilder(
          int index) {
        if (outputsBuilder_ == null) {
          return outputs_.get(index);  } else {
          return outputsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public java.util.List<? extends AUVprotocol.Command.OutputOrBuilder> 
           getOutputsOrBuilderList() {
        if (outputsBuilder_ != null) {
          return outputsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(outputs_);
        }
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public AUVprotocol.Command.Output.Builder addOutputsBuilder() {
        return getOutputsFieldBuilder().addBuilder(
            AUVprotocol.Command.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public AUVprotocol.Command.Output.Builder addOutputsBuilder(
          int index) {
        return getOutputsFieldBuilder().addBuilder(
            index, AUVprotocol.Command.Output.getDefaultInstance());
      }
      /**
       * <code>repeated .Command.Output outputs = 5;</code>
       */
      public java.util.List<AUVprotocol.Command.Output.Builder> 
           getOutputsBuilderList() {
        return getOutputsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          AUVprotocol.Command.Output, AUVprotocol.Command.Output.Builder, AUVprotocol.Command.OutputOrBuilder> 
          getOutputsFieldBuilder() {
        if (outputsBuilder_ == null) {
          outputsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              AUVprotocol.Command.Output, AUVprotocol.Command.Output.Builder, AUVprotocol.Command.OutputOrBuilder>(
                  outputs_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          outputs_ = null;
        }
        return outputsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:Command)
    }

    static {
      defaultInstance = new Command(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Command)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AUV_State_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AUV_State_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AUV_State_Telemetry_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AUV_State_Telemetry_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AUV_State_Telemetry_Camera_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AUV_State_Telemetry_Camera_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_AUV_State_Telemetry_Pinger_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_AUV_State_Telemetry_Pinger_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Command_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Command_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Command_Movement_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Command_Movement_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Command_Output_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Command_Output_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021AUVprotocol.proto\"\252\004\n\tAUV_State\022\021\n\ttim" +
      "estamp\030\001 \002(\004\022\017\n\007mission\030\002 \002(\010\022\014\n\004batt\030\003 " +
      "\002(\002\022\020\n\010aligning\030\004 \002(\010\022\'\n\ttelemetry\030\005 \001(\013" +
      "2\024.AUV_State.Telemetry\022\013\n\003msg\030\006 \001(\t\032\242\003\n\t" +
      "Telemetry\022\017\n\007heading\030\001 \001(\002\022\r\n\005depth\030\002 \001(" +
      "\002\022\r\n\005acc_x\030\003 \001(\002\022\r\n\005acc_y\030\004 \001(\002\022\r\n\005acc_z" +
      "\030\005 \001(\002\022\013\n\003yaw\030\006 \001(\002\022\r\n\005pitch\030\007 \001(\002\022\014\n\004ro" +
      "ll\030\010 \001(\002\022+\n\006camera\030\t \003(\0132\033.AUV_State.Tel" +
      "emetry.Camera\022/\n\npinger_loc\030\n \001(\0132\033.AUV_" +
      "State.Telemetry.Pinger\032P\n\006Camera\0224\n\007auv_",
      "loc\030\001 \002(\0162#.AUV_State.Telemetry.CameraLo" +
      "cation\022\020\n\010file_loc\030\002 \002(\t\032,\n\006Pinger\022\017\n\007he" +
      "ading\030\001 \002(\002\022\021\n\televation\030\002 \002(\002\"@\n\016Camera" +
      "Location\022\013\n\007FORWARD\020\000\022\010\n\004DOWN\020\001\022\010\n\004PORT\020" +
      "\002\022\r\n\tSTARBOARD\020\003\"\367\001\n\007Command\022 \n\005speed\030\001 " +
      "\001(\0132\021.Command.Movement\022\017\n\007heading\030\002 \001(\002\022" +
      "\r\n\005depth\030\003 \001(\002\022\014\n\004freq\030\004 \001(\r\022 \n\007outputs\030" +
      "\005 \003(\0132\017.Command.Output\032U\n\010Movement\022\t\n\001x\030" +
      "\001 \002(\002\022\t\n\001y\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\022\013\n\003yaw\030\004 \001(\002" +
      "\022\r\n\005pitch\030\005 \001(\002\022\014\n\004roll\030\006 \001(\002\032#\n\006Output\022",
      "\n\n\002id\030\001 \002(\t\022\r\n\005value\030\002 \002(\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_AUV_State_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_AUV_State_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AUV_State_descriptor,
              new java.lang.String[] { "Timestamp", "Mission", "Batt", "Aligning", "Telemetry", "Msg", });
          internal_static_AUV_State_Telemetry_descriptor =
            internal_static_AUV_State_descriptor.getNestedTypes().get(0);
          internal_static_AUV_State_Telemetry_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AUV_State_Telemetry_descriptor,
              new java.lang.String[] { "Heading", "Depth", "AccX", "AccY", "AccZ", "Yaw", "Pitch", "Roll", "Camera", "PingerLoc", });
          internal_static_AUV_State_Telemetry_Camera_descriptor =
            internal_static_AUV_State_Telemetry_descriptor.getNestedTypes().get(0);
          internal_static_AUV_State_Telemetry_Camera_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AUV_State_Telemetry_Camera_descriptor,
              new java.lang.String[] { "AuvLoc", "FileLoc", });
          internal_static_AUV_State_Telemetry_Pinger_descriptor =
            internal_static_AUV_State_Telemetry_descriptor.getNestedTypes().get(1);
          internal_static_AUV_State_Telemetry_Pinger_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_AUV_State_Telemetry_Pinger_descriptor,
              new java.lang.String[] { "Heading", "Elevation", });
          internal_static_Command_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Command_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Command_descriptor,
              new java.lang.String[] { "Speed", "Heading", "Depth", "Freq", "Outputs", });
          internal_static_Command_Movement_descriptor =
            internal_static_Command_descriptor.getNestedTypes().get(0);
          internal_static_Command_Movement_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Command_Movement_descriptor,
              new java.lang.String[] { "X", "Y", "Z", "Yaw", "Pitch", "Roll", });
          internal_static_Command_Output_descriptor =
            internal_static_Command_descriptor.getNestedTypes().get(1);
          internal_static_Command_Output_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Command_Output_descriptor,
              new java.lang.String[] { "Id", "Value", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
